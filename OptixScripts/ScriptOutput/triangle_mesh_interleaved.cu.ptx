//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21373419
// Cuda compilation tools, release 8.0, V8.0.55
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_50
.address_size 64

	// .globl	_Z14mesh_intersecti
.global .align 1 .b8 vertex_buffer[1];
.global .align 1 .b8 vindex_buffer[1];
.global .align 8 .b8 texcoord[12];
.global .align 8 .b8 geometric_normal[12];
.global .align 8 .b8 shading_normal[12];
.global .align 4 .b8 ray[36];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texcoordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8texcoordE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum8texcoordE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic8texcoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 99, 111, 111, 114, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation8texcoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.visible .entry _Z14mesh_intersecti(
	.param .u32 _Z14mesh_intersecti_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<96>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<54>;


	ld.param.s32 	%rd4, [_Z14mesh_intersecti_param_0];
	mov.u64 	%rd26, vindex_buffer;
	cvta.global.u64 	%rd3, %rd26;
	mov.u32 	%r7, 1;
	mov.u32 	%r2, 12;
	mov.u64 	%rd25, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_64, (%rd3, %r7, %r2, %rd4, %rd25, %rd25, %rd25);
	// inline asm
	ld.s32 	%rd10, [%rd2];
	mov.u64 	%rd27, vertex_buffer;
	cvta.global.u64 	%rd9, %rd27;
	ld.s32 	%rd16, [%rd2+4];
	ld.s32 	%rd22, [%rd2+8];
	mov.u32 	%r8, 24;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd9, %r7, %r8, %rd10, %rd25, %rd25, %rd25);
	// inline asm
	ld.f32 	%f7, [%rd8+8];
	ld.f32 	%f8, [%rd8+4];
	ld.f32 	%f9, [%rd8];
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd9, %r7, %r8, %rd16, %rd25, %rd25, %rd25);
	// inline asm
	ld.f32 	%f10, [%rd14+8];
	ld.f32 	%f11, [%rd14+4];
	ld.f32 	%f12, [%rd14];
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd9, %r7, %r8, %rd22, %rd25, %rd25, %rd25);
	// inline asm
	sub.f32 	%f13, %f12, %f9;
	sub.f32 	%f14, %f11, %f8;
	sub.f32 	%f15, %f10, %f7;
	ld.f32 	%f16, [%rd20+8];
	ld.f32 	%f17, [%rd20+4];
	ld.f32 	%f18, [%rd20];
	sub.f32 	%f19, %f9, %f18;
	sub.f32 	%f20, %f8, %f17;
	sub.f32 	%f21, %f7, %f16;
	mul.f32 	%f22, %f15, %f20;
	mul.f32 	%f23, %f14, %f21;
	sub.f32 	%f1, %f22, %f23;
	mul.f32 	%f24, %f13, %f21;
	mul.f32 	%f25, %f15, %f19;
	sub.f32 	%f2, %f24, %f25;
	mul.f32 	%f26, %f14, %f19;
	mul.f32 	%f27, %f13, %f20;
	sub.f32 	%f3, %f26, %f27;
	ld.global.f32 	%f28, [ray+12];
	ld.global.f32 	%f29, [ray+16];
	mul.f32 	%f30, %f29, %f2;
	fma.rn.f32 	%f31, %f28, %f1, %f30;
	ld.global.f32 	%f32, [ray+20];
	fma.rn.f32 	%f33, %f32, %f3, %f31;
	rcp.rn.f32 	%f34, %f33;
	ld.global.f32 	%f35, [ray];
	sub.f32 	%f36, %f9, %f35;
	ld.global.f32 	%f37, [ray+4];
	sub.f32 	%f38, %f8, %f37;
	ld.global.f32 	%f39, [ray+8];
	sub.f32 	%f40, %f7, %f39;
	mul.f32 	%f41, %f34, %f36;
	mul.f32 	%f42, %f34, %f38;
	mul.f32 	%f43, %f34, %f40;
	mul.f32 	%f44, %f29, %f43;
	mul.f32 	%f45, %f42, %f32;
	sub.f32 	%f46, %f44, %f45;
	mul.f32 	%f47, %f41, %f32;
	mul.f32 	%f48, %f43, %f28;
	sub.f32 	%f49, %f47, %f48;
	mul.f32 	%f50, %f42, %f28;
	mul.f32 	%f51, %f41, %f29;
	sub.f32 	%f52, %f50, %f51;
	mul.f32 	%f53, %f20, %f49;
	fma.rn.f32 	%f54, %f19, %f46, %f53;
	fma.rn.f32 	%f4, %f21, %f52, %f54;
	mul.f32 	%f55, %f14, %f49;
	fma.rn.f32 	%f56, %f13, %f46, %f55;
	fma.rn.f32 	%f5, %f15, %f52, %f56;
	mul.f32 	%f57, %f2, %f42;
	fma.rn.f32 	%f58, %f1, %f41, %f57;
	fma.rn.f32 	%f6, %f3, %f43, %f58;
	ld.global.f32 	%f59, [ray+32];
	setp.lt.f32	%p1, %f6, %f59;
	ld.global.f32 	%f60, [ray+28];
	setp.gt.f32	%p2, %f6, %f60;
	and.pred  	%p3, %p1, %p2;
	setp.ge.f32	%p4, %f4, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	setp.ge.f32	%p6, %f5, 0f00000000;
	and.pred  	%p7, %p5, %p6;
	add.f32 	%f61, %f4, %f5;
	setp.le.f32	%p8, %f61, 0f3F800000;
	and.pred  	%p9, %p7, %p8;
	@!%p9 bra 	BB0_3;
	bra.uni 	BB0_1;

BB0_1:
	// inline asm
	call (%r9), _rt_potential_intersection, (%f6);
	// inline asm
	setp.eq.s32	%p10, %r9, 0;
	@%p10 bra 	BB0_3;

	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd3, %r7, %r2, %rd4, %rd25, %rd25, %rd25);
	// inline asm
	ld.s32 	%rd36, [%rd28];
	ld.s32 	%rd42, [%rd28+4];
	ld.s32 	%rd48, [%rd28+8];
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd9, %r7, %r8, %rd36, %rd25, %rd25, %rd25);
	// inline asm
	ld.f32 	%f63, [%rd34+20];
	ld.f32 	%f64, [%rd34+16];
	ld.f32 	%f65, [%rd34+12];
	// inline asm
	call (%rd40), _rt_buffer_get_64, (%rd9, %r7, %r8, %rd42, %rd25, %rd25, %rd25);
	// inline asm
	ld.f32 	%f66, [%rd40+20];
	ld.f32 	%f67, [%rd40+16];
	ld.f32 	%f68, [%rd40+12];
	// inline asm
	call (%rd46), _rt_buffer_get_64, (%rd9, %r7, %r8, %rd48, %rd25, %rd25, %rd25);
	// inline asm
	ld.f32 	%f69, [%rd46+20];
	ld.f32 	%f70, [%rd46+16];
	ld.f32 	%f71, [%rd46+12];
	mul.f32 	%f72, %f5, %f71;
	mul.f32 	%f73, %f5, %f70;
	mul.f32 	%f74, %f5, %f69;
	fma.rn.f32 	%f75, %f4, %f68, %f72;
	fma.rn.f32 	%f76, %f4, %f67, %f73;
	fma.rn.f32 	%f77, %f4, %f66, %f74;
	mov.f32 	%f78, 0f3F800000;
	sub.f32 	%f79, %f78, %f4;
	sub.f32 	%f80, %f79, %f5;
	fma.rn.f32 	%f81, %f80, %f65, %f75;
	fma.rn.f32 	%f82, %f80, %f64, %f76;
	fma.rn.f32 	%f83, %f80, %f63, %f77;
	mul.f32 	%f84, %f82, %f82;
	fma.rn.f32 	%f85, %f81, %f81, %f84;
	fma.rn.f32 	%f86, %f83, %f83, %f85;
	sqrt.rn.f32 	%f87, %f86;
	rcp.rn.f32 	%f88, %f87;
	mul.f32 	%f89, %f88, %f83;
	mul.f32 	%f90, %f88, %f82;
	mul.f32 	%f91, %f88, %f81;
	st.global.v2.f32 	[shading_normal], {%f91, %f90};
	st.global.f32 	[shading_normal+8], %f89;
	neg.f32 	%f92, %f2;
	neg.f32 	%f93, %f1;
	st.global.v2.f32 	[geometric_normal], {%f93, %f92};
	neg.f32 	%f94, %f3;
	st.global.f32 	[geometric_normal+8], %f94;
	mov.u32 	%r19, 0;
	st.global.u32 	[texcoord+8], %r19;
	mov.f32 	%f95, 0f00000000;
	st.global.v2.f32 	[texcoord], {%f95, %f95};
	// inline asm
	call (%r18), _rt_report_intersection, (%r19);
	// inline asm

BB0_3:
	ret;
}

	// .globl	_Z11mesh_boundsiPf
.visible .entry _Z11mesh_boundsiPf(
	.param .u32 _Z11mesh_boundsiPf_param_0,
	.param .u64 _Z11mesh_boundsiPf_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<42>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<30>;


	ld.param.u64 	%rd3, [_Z11mesh_boundsiPf_param_1];
	ld.param.s32 	%rd6, [_Z11mesh_boundsiPf_param_0];
	mov.u64 	%rd28, vindex_buffer;
	cvta.global.u64 	%rd5, %rd28;
	mov.u32 	%r7, 1;
	mov.u32 	%r2, 12;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r7, %r2, %rd6, %rd27, %rd27, %rd27);
	// inline asm
	ld.s32 	%rd12, [%rd4];
	mov.u64 	%rd29, vertex_buffer;
	cvta.global.u64 	%rd11, %rd29;
	ld.s32 	%rd18, [%rd4+4];
	ld.s32 	%rd24, [%rd4+8];
	mov.u32 	%r8, 24;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f3, [%rd10+8];
	ld.f32 	%f2, [%rd10+4];
	ld.f32 	%f1, [%rd10];
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f6, [%rd16+8];
	ld.f32 	%f5, [%rd16+4];
	ld.f32 	%f4, [%rd16];
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd11, %r7, %r8, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	sub.f32 	%f11, %f4, %f1;
	sub.f32 	%f12, %f5, %f2;
	sub.f32 	%f13, %f6, %f3;
	ld.f32 	%f9, [%rd22+8];
	ld.f32 	%f8, [%rd22+4];
	ld.f32 	%f7, [%rd22];
	sub.f32 	%f14, %f7, %f1;
	sub.f32 	%f15, %f8, %f2;
	sub.f32 	%f16, %f9, %f3;
	mul.f32 	%f17, %f12, %f16;
	mul.f32 	%f18, %f13, %f15;
	sub.f32 	%f19, %f17, %f18;
	mul.f32 	%f20, %f13, %f14;
	mul.f32 	%f21, %f11, %f16;
	sub.f32 	%f22, %f20, %f21;
	mul.f32 	%f23, %f11, %f15;
	mul.f32 	%f24, %f12, %f14;
	sub.f32 	%f25, %f23, %f24;
	mul.f32 	%f26, %f22, %f22;
	fma.rn.f32 	%f27, %f19, %f19, %f26;
	fma.rn.f32 	%f28, %f25, %f25, %f27;
	sqrt.rn.f32 	%f10, %f28;
	mov.pred 	%p5, 0;
	setp.leu.f32	%p4, %f10, 0f00000000;
	@%p4 bra 	BB1_2;

	abs.f32 	%f29, %f10;
	setp.neu.f32	%p5, %f29, 0f7F800000;

BB1_2:
	cvta.to.global.u64 	%rd2, %rd3;
	@%p5 bra 	BB1_4;
	bra.uni 	BB1_3;

BB1_4:
	min.f32 	%f30, %f1, %f4;
	min.f32 	%f31, %f30, %f7;
	min.f32 	%f32, %f2, %f5;
	min.f32 	%f33, %f32, %f8;
	min.f32 	%f34, %f3, %f6;
	min.f32 	%f35, %f34, %f9;
	st.global.f32 	[%rd2], %f31;
	st.global.f32 	[%rd2+4], %f33;
	st.global.f32 	[%rd2+8], %f35;
	max.f32 	%f36, %f1, %f4;
	max.f32 	%f37, %f36, %f7;
	max.f32 	%f38, %f2, %f5;
	max.f32 	%f39, %f38, %f8;
	max.f32 	%f40, %f3, %f6;
	max.f32 	%f41, %f40, %f9;
	st.global.f32 	[%rd2+12], %f37;
	st.global.f32 	[%rd2+16], %f39;
	st.global.f32 	[%rd2+20], %f41;
	bra.uni 	BB1_5;

BB1_3:
	mov.u32 	%r9, 2096152002;
	st.global.u32 	[%rd2+8], %r9;
	st.global.u32 	[%rd2+4], %r9;
	st.global.u32 	[%rd2], %r9;
	mov.u32 	%r10, -51331646;
	st.global.u32 	[%rd2+20], %r10;
	st.global.u32 	[%rd2+16], %r10;
	st.global.u32 	[%rd2+12], %r10;

BB1_5:
	ret;
}


